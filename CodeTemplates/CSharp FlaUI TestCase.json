{"id":100051,"name":"CSharp FlaUI","mergeCode":true,"type":"TestCase","language":"CSharp","languageExtension":".cs","builtIn":false,"items":[{"id":1015,"name":"TestCaseTemplate","code":"using FlaUI.Core;\r\nusing FlaUI.Core.AutomationElements;\r\nusing FlaUI.Core.Conditions;\r\nusing FlaUI.Core.Input;\r\nusing FlaUI.Core.WindowsAPI;\r\nusing FlaUI.UIA3;\r\nusing NUnit.Framework;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Windows.Input;\r\nusing TestModellerCSharp.Pages.Samples.Calculator;\r\nusing Tests;\r\nusing Utilities;\r\nusing CuriositySoftware.RunResult.Entities;\r\n\r\nnamespace Tests\r\n{\r\n    [TestFixture]\r\n    public class {{{TestCaseName}}} : TestBase\r\n    {\r\n\t\t//Region - Testcases\r\n\r\n\t\t//EndRegion - Testcases\r\n    }\r\n}","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1016,"name":"TestCaseMethodTemplate","code":"       [Test]\r\n        [TestModellerId({{{test-guid}}})]\r\n        public void {{{TestName}}}()\r\n        {\r\n            app = Application.LaunchStoreApp(\"Microsoft.WindowsCalculator_8wekyb3d8bbwe!App\");\r\n        //Region - Test Logic\r\n\r\n        //EndRegion - Test Logic\r\n        }","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1017,"name":"TestCaseRepeaterTemplate","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1018,"name":"InitializePageObjectTemplate","code":"{{{CodeGenObjectType}}}\t {{{CodeGenerationObjectVariableName}}}\t= new {{{CodeGenObjectType}}} (app);","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1019,"name":"AllocateTagTemplate","code":"[DataAllocation(\"{{{AllocatePoolName}}}\", \"{{{AllocateSuiteName}}}\", (new[] { \"{{{AllocateGroupName}}}\"}))]","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1020,"name":"AllocateRetrieveDataValueTemplate","code":"dataRow[\"{{{AllocateColumnName}}}\"].toString()","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1021,"name":"FunctionCallTemplate","code":"    TestModellerLogger.SetLastNodeGuid(\"{{{NodeGuid}}}\");\r\n    {{{CodeGenerationObjectVariableName}}}.{{{CodeGenerationFunctionName}}}({{{CodeGenerationFunctionParameters}}});","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1022,"name":"FunctionCallWithReturnTemplate","code":"    TestModellerLogger.SetLastNodeGuid(\"{{{NodeGuid}}}\");\r\n    {{{CodeGenObjectReturnType}}} {{{CodeGenFunctionReturnParamName}}} = {{{CodeGenerationObjectVariableName}}}.{{{CodeGenerationFunctionName}}}({{{CodeGenerationFunctionParameters}}});","embeddedCode":false,"functionParameters":[],"templateId":100051},{"id":1023,"name":"TestCaseMethodAllocateTemplate","code":"    [Test]\r\n    [TestModellerId({{{test-guid}}})]\r\n    {{{AllocateTag}}}\r\n    public void {{{TestName}}}()\r\n    {\r\n        DataAllocationResult allocResult =  dataAllocationEngine.GetDataResult(\"{{{AllocatePoolName}}}\", \"{{{AllocateSuiteName}}}\", \"{{{AllocateGroupName}}}\", ResultMergeMethod.MinimumProductLoopBack);\r\n\r\n        foreach (DataAllocationRow dataRow in allocResult.getDataRows()) {\r\n            //Region - Test Logic\r\n            //EndRegion - Test Logic\r\n        }\r\n    }\r\n","embeddedCode":false,"functionParameters":[],"templateId":100051}]}